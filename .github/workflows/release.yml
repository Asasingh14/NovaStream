name: Release NovaStream

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Run tests before release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt
      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings

  release:
    name: Build & Release Binaries
    needs: test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform: mac
            ext: ""
            disable_console: ""
            macos_app: "--macos-create-app-bundle"
            icon_flag: "--macos-app-icon=src/icon.png"
            uac_admin: ""
            uac_uiaccess: ""
          - os: windows-latest
            platform: windows-x64
            ext: ".exe"
            disable_console: "--windows-console-mode=disable"
            macos_app: ""
            icon_flag: "--windows-icon-from-ico=src/icon.png"
            uac_admin: "--windows-uac-admin"
            uac_uiaccess: "--windows-uac-uiaccess"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ matrix.platform }}-${{ hashFiles('src/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-ccache-${{ matrix.platform }}-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: brew install ccache upx || true

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: choco install ccache upx -y || true

      - name: Install imageio for icon conversion
        run: pip install imageio

      - name: Build Executable with Nuitka Action
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: src/gui.py
          mode: standalone
          enable-plugins: tk-inter
          macos-app-icon: src/icon.png
          windows-icon-from-ico: src/icon.png

      - name: Zip binary
        run: |
          zip -j novastream-${{ matrix.platform }}-${{ github.ref_name }}.zip build/*

      - name: Publish asset
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GH_RELEASE_TOKEN }}
          tag: ${{ github.ref_name }}
          artifacts: novastream-${{ matrix.platform }}-${{ github.ref_name }}.zip
          name: novastream-${{ matrix.platform }}-${{ github.ref_name }}.zip
          draft: false
          prerelease: false
          skipIfReleaseExists: true 